styleHeadTags = Neos.Fusion:Component {
    themeColor = ${q(site).property('themeColorMeta') || '#ffffff'}
    themeColorScheme = ${q(site).property('themeColorScheme')}
    themeHeaderMarkup = ${q(site).property('themeHeaderMarkup')}
    name = ${site.context.currentSite.name}
    themeFaviconSvg = ${q(site).property('themeFaviconSvg')}
    themeFaviconImage = ${q(site).property('themeFaviconPng') || q(site).property('themeFaviconAppleTouch')}
    themeCSS = ${q(site).property('themeCSS')}
    themeCSSLink = Neos.Neos:NodeUri {
        absolute = true
        node = ${site}
        format = 'themestyle'
    }
    themeCSSHash = ${q(site).property('themeCSSHash')}
    inBackend = ${node.context.inBackend}

    renderer = afx`
        {props.themeHeaderMarkup}
        <meta @if={props.themeColorScheme} name="color-scheme" content={props.themeColorScheme} />
        <style @if={props.inBackend} data-style="themeCSS">{props.themeCSS}</style>
        <link @if={!props.inBackend} rel="stylesheet" href={props.themeCSSLink + '?v=' + props.themeCSSHash} />
        <meta @if={props.themeColor} name="theme-color" content={props.themeColor} />
        <meta @if={props.name} name="apple-mobile-web-app-title" content={props.name} />
        <meta @if={props.name} name="application-name" content={props.name} />
        <link @if={props.themeFaviconImage} rel="icon" href="/favicon.ico" sizes="32x32" />
        <link @if={props.themeFaviconSvg && props.themeFaviconSvg.svg} rel="icon" href="/icon.svg" type="image/svg+xml" />
        <link @if={props.themeFaviconImage} rel="apple-touch-icon" href="/apple-touch-icon.png" />
        <link @if={props.themeFaviconImage} rel="icon" href="/favicon-96x96.png" sizes="96x96" />
    `

    @cache {
        mode = 'cached'
        entryIdentifier {
            identifier = 'Style_HeadTags'
            site = ${site}
        }
        entryTags {
            headtags = 'Style_HeadTags'
        }
    }
}
