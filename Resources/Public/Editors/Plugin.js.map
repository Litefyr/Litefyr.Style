{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.8/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.8/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.8/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-decorators/index.js", "../../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.8/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.8/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../../Private/Editors/ClipPath/Primary.js", "../../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs", "../../Private/Editors/ClipPath/Components/ClipPathOutput.js", "../../Private/Editors/Components/RangeInput.js", "../../../node_modules/.pnpm/nanoid@5.0.7/node_modules/nanoid/url-alphabet/index.js", "../../../node_modules/.pnpm/nanoid@5.0.7/node_modules/nanoid/index.browser.js", "../../Private/Editors/Components/Icon.js", "../../Private/Editors/ClipPath/Components/ControlBar.js", "../../Private/Editors/ClipPath/Secondary.js", "../../Private/Editors/Font/Primary.js", "../../Private/Editors/Font/Secondary.js", "../../Private/Editors/Font/Components/ControlBar.js", "../../Private/Editors/Font/Components/RangeInput.js", "../../Private/Editors/Font/Components/ReadFont.js", "../../Private/Editors/Font/Components/GenerateFontFace.js", "../../Private/Editors/Font/Components/PreviewText.js", "../../Private/Editors/manifest.js"],
  "sourcesContent": [null, null, null, null, null, "import React from \"react\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\nimport { IconButton, Icon } from \"@neos-project/react-ui-components\";\nimport clsx from \"clsx\";\nimport { ClipPathOutput } from \"./Components\";\nimport { style } from \"../Components\";\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n    secondaryEditorsRegistry: globalRegistry.get(\"inspector\").get(\"secondaryEditors\"),\n}));\n\nconst defaultOptions = {\n    allowEmpty: true,\n    disabled: false,\n};\n\nfunction Editor(props) {\n    const { allowEmpty, disabled, topColor, bottomColor } = { ...defaultOptions, ...props.options };\n    const { value, commit, highlight, i18nRegistry, renderSecondaryInspector, secondaryEditorsRegistry } = props;\n\n    function onChange(value) {\n        commit(value);\n    }\n\n    function onReset() {\n        // This closes the secondary inspector\n        renderSecondaryInspector(\"LITEFYR_CLIPPATH_EDIT\", () => null);\n        commit({ ...value, top: null, bottom: null });\n    }\n\n    function handleOpenEditor() {\n        const { component: ClipPathEditorWrap } = secondaryEditorsRegistry.get(\"Litefyr.Style/ClipPathEditorWrap\");\n        renderSecondaryInspector(\"LITEFYR_CLIPPATH_EDIT\", () => (\n            <ClipPathEditorWrap\n                onChange={onChange}\n                value={value}\n                topColor={topColor}\n                bottomColor={bottomColor}\n                i18nRegistry={i18nRegistry}\n            />\n        ));\n    }\n\n    return (\n        <div className={clsx(style.primaryWrapper, disabled && style.primaryDisabled)}>\n            {value.top && (\n                <button\n                    type=\"button\"\n                    className={clsx(style.previewOutput, highlight && style.highlight)}\n                    onClick={handleOpenEditor}\n                >\n                    <ClipPathOutput state={value} topColor={topColor} bottomColor={bottomColor} />\n                    <Icon icon=\"pencil\" size=\"5x\" mask={[\"fas\", \"circle\"]} transform=\"shrink-8\" />\n                </button>\n            )}\n            <div className={style.primaryButtons}>\n                <IconButton\n                    className={clsx(!value.top && highlight && style.highlight)}\n                    style=\"lighter\"\n                    icon=\"pencil\"\n                    title=\"Edit\"\n                    onClick={handleOpenEditor}\n                />\n                {allowEmpty && <IconButton style=\"lighter\" icon=\"times\" title=\"Reset\" onClick={onReset} />}\n            </div>\n        </div>\n    );\n}\n\nexport default neosifier(Editor);\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import clsx from \"clsx\";\nimport React from \"react\";\nimport { style } from \"../../Components\";\n\nexport function calculate(state) {\n    const { height, offset, amplitude, frequency, points, phase, asyncPhaseEnable, asyncPhase } = state;\n    let scaledPoints = points;\n    if (scaledPoints > 6) {\n        const pointsScale = {\n            7: 100,\n            8: 150,\n            9: 200,\n            10: 300,\n        };\n        scaledPoints = pointsScale[points] || 300;\n    }\n\n    const units = (2 * Math.PI * (frequency * -1)) / scaledPoints;\n    const radPhase = (phase * Math.PI) / 180;\n\n    const top = calcPath({ scaledPoints, offset, amplitude, units, radPhase, height });\n    const bottom = asyncPhaseEnable\n        ? calcPath({ scaledPoints, offset, amplitude, units, radPhase: (asyncPhase * Math.PI) / 180, height })\n        : top;\n    return { ...state, top, bottom };\n}\n\nfunction calcPath({ scaledPoints, offset, amplitude, units, radPhase, height }) {\n    const path = [];\n    for (let i = 0; i <= scaledPoints; i++) {\n        const value = offset + amplitude * Math.cos(i * units + radPhase);\n        const X = (i * 100) / scaledPoints;\n        const Y = (value / height) * 100;\n        path.push(`${X.toFixed(2)}% ${Y.toFixed(2)}%`);\n    }\n    return path.join(\",\");\n}\n\nfunction getClipPath(path, top = true) {\n    return top ? `polygon(100% 100%,0% 100%,${path})` : `polygon(100% 0%,0% 0%,${path})`;\n}\n\nexport default function ClipPathOutput({ state, label, topColor, bottomColor }) {\n    const { width, height, top, bottom, asyncPhaseEnable } = state;\n    if (!top || !bottom) {\n        return \"\";\n    }\n    const aspectRatio = `${width}  / ${height}`;\n    const margin = `${(height / width) * -100}%`;\n\n    return (\n        <div className={clsx(style.checkboard, style.clipPathOutput)}>\n            <div style={{ position: \"relative\", zIndex: 2 }}>\n                <div\n                    className={style.bgBlue}\n                    style={{\n                        backgroundColor: topColor,\n                        aspectRatio,\n                        clipPath: getClipPath(top),\n                        marginBottom: \"-1px\",\n                    }}\n                ></div>\n                <h1 style={{ backgroundColor: topColor }} className={clsx(style.outputContent, style.bgBlue)}>\n                    {label}\n                </h1>\n                <div\n                    className={style.bgBlue}\n                    style={{\n                        backgroundColor: topColor,\n                        aspectRatio,\n                        clipPath: getClipPath(bottom, false),\n                    }}\n                ></div>\n            </div>\n            {asyncPhaseEnable && (\n                <div style={{ position: \"relative\", zIndex: 1 }}>\n                    <div\n                        className={style.bgViolet}\n                        style={{\n                            backgroundColor: bottomColor,\n                            aspectRatio,\n                            clipPath: getClipPath(top),\n                            marginTop: margin,\n                            marginBottom: \"-1px\",\n                            zIndex: -1,\n                        }}\n                    ></div>\n                    <h1 style={{ backgroundColor: bottomColor }} className={clsx(style.outputContent, style.bgViolet)}>\n                        {label}\n                    </h1>\n                    <div\n                        className={style.bgViolet}\n                        style={{\n                            backgroundColor: bottomColor,\n                            aspectRatio,\n                            clipPath: getClipPath(bottom, false),\n                        }}\n                    ></div>\n                </div>\n            )}\n        </div>\n    );\n}\n", "import React from \"react\";\nimport clsx from \"clsx\";\nimport { CheckBox } from \"@neos-project/react-ui-components\";\nimport style from \"./Style.module.css\";\nimport { nanoid } from \"nanoid\";\n\nexport default function RangeInput({\n    state,\n    onCommit,\n    property,\n    enableProperty,\n    label,\n    min = 0,\n    max = 100,\n    step = 1,\n    minIcon,\n    maxIcon,\n    showValue = false,\n}) {\n    const id = nanoid();\n    const value = state[property];\n    const enabled = enableProperty ? !!state[enableProperty] : true;\n\n    let valueLabel = null;\n    if (showValue) {\n        valueLabel = typeof showValue === \"function\" ? showValue(value) : value;\n    }\n\n    return (\n        <div className={style.range}>\n            {enableProperty && (\n                <label className={clsx(style.rangeEnableLabel, style.checboxLabel)}>\n                    <CheckBox\n                        onChange={(value) => {\n                            onCommit({ [enableProperty]: value });\n                        }}\n                        isChecked={enabled}\n                    />\n                    <span>\n                        {label} {valueLabel}\n                    </span>\n                </label>\n            )}\n            <label htmlFor={id} className={enableProperty ? style.srOnly : style.rangeLabel}>\n                {label} {valueLabel}\n            </label>\n            {enabled && (\n                <div className={clsx(style.flex, style.itemsCenter, style.gap2)}>\n                    <div className={style.rangeIcon}>{minIcon}</div>\n                    <input\n                        type=\"range\"\n                        id={id}\n                        min={min}\n                        max={max}\n                        value={value}\n                        step={step}\n                        onChange={({ target }) => {\n                            onCommit({ [property]: target.valueAsNumber });\n                        }}\n                    />\n                    <div className={style.rangeIcon}>{maxIcon}</div>\n                </div>\n            )}\n        </div>\n    );\n}\n", "export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n", "import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n", "import React from \"react\";\n\nexport function Square({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={size} height={size}>\n            <rect strokeWidth=\"2\" fill=\"none\" stroke=\"currentColor\" x=\"1\" y=\"1\" width=\"22\" height=\"22\"></rect>\n        </svg>\n    );\n}\n\nexport function Circle({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={size} height={size}>\n            <circle strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" cx=\"12\" cy=\"12\" r=\"11\"></circle>\n        </svg>\n    );\n}\n\nexport function Wave({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={size} height={size}>\n            <path\n                fill=\"none\"\n                fillRule=\"nonzero\"\n                stroke=\"currentcolor\"\n                strokeLinecap=\"round\"\n                strokeWidth=\"2\"\n                d=\"M1 13.04l1.222 2.586c1.222 2.634 3.667 5.757 6.111 3.779 2.445-1.979 3.89-13.01 7.334-14.988 2.296-1.32 4.74 1.485 7.333 8.412\"\n            />\n        </svg>\n    );\n}\n\nexport function Mountain({ size = 24 }) {\n    return (\n        <svg viewBox=\"0 0 752 752\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width={size} height={size}>\n            <path\n                d=\"M409.71 224.23c-3.05.04-6.2 1.863-8.434 5.18l-84.949 145.77-25.16-43.363c-1.59-2.762-4.66-4.614-7.843-4.735-3.434-.136-6.868 1.758-8.586 4.735l-104.78 180.26c-5.64 9.367.43 15.703 9.027 15.688h396.03c6.59-.047 11.434-8.5 8.14-14.207l-165.46-284.15c-1.992-3.465-4.94-5.215-7.992-5.18zm-4.438 60.676a9.471 9.471 0 0 1 8.731 4.883l77.551 132.45v.004a9.516 9.516 0 0 1-3.406 13.023 9.516 9.516 0 0 1-13.023-3.406l-77.551-132.6h.004a9.473 9.473 0 0 1 7.695-14.356z\"\n                fillRule=\"evenodd\"\n            />\n        </svg>\n    );\n}\n\nexport function ArrowUp({ size = 24 }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            width={size}\n            height={size}\n        >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 19.5v-15m0 0l-6.75 6.75M12 4.5l6.75 6.75\" />\n        </svg>\n    );\n}\n\nexport function ArrowDown({ size = 24 }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            width={size}\n            height={size}\n        >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3\" />\n        </svg>\n    );\n}\n\nexport function ArrowLeft({ size = 24 }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            width={size}\n            height={size}\n        >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 12h-15m0 0l6.75 6.75M4.5 12l6.75-6.75\" />\n        </svg>\n    );\n}\n\nexport function ArrowRight({ size = 24 }) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            width={size}\n            height={size}\n        >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75\" />\n        </svg>\n    );\n}\n\nexport function Peak({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={size} height={size}>\n            <path\n                fill=\"none\"\n                fillRule=\"nonzero\"\n                stroke=\"currentcolor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M1 13.3142857L8 20 16 4 23 11.8857143\"\n            />\n        </svg>\n    );\n}\n\nexport function WaveLow({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={size} height={size}>\n            <path\n                fill=\"none\"\n                fillRule=\"nonzero\"\n                stroke=\"currentcolor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M1 13.247l1.833-.876c1.834-.876 5.5-2.63 9.167-2.339 3.667.312 7.333 2.613 9.167 3.801L23 15\"\n            />\n        </svg>\n    );\n}\n\nexport function WaveHigh({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={size} height={size}>\n            <path\n                fill=\"none\"\n                fillRule=\"nonzero\"\n                stroke=\"currentcolor\"\n                strokeLinecap=\"round\"\n                strokeWidth=\"2\"\n                d=\"M1 13.736C2.04 11.933 3.09 5.049 4.146 5c.659.031 1.324 2.817 1.985 5.531.38 1.561.76 3.098 1.138 4.073 1.059 2.574 2.113.935 3.146-.868 1.057-1.803 2.113-3.442 3.146-3.491 1.055.049 2.114 1.688 3.146 4.36 1.052 2.573 2.09 6.178 3.147 5.244 1.05-.869 2.09-6.113 2.618-8.736L23 8.491\"\n            />\n        </svg>\n    );\n}\n\nexport function PeakLow({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={size} height={size}>\n            <path\n                fill=\"none\"\n                fillRule=\"evenodd\"\n                stroke=\"currentcolor\"\n                strokeLinecap=\"round\"\n                strokeWidth=\"2\"\n                d=\"M5 16l14-7\"\n            />\n        </svg>\n    );\n}\n\nexport function PeakHigh({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={size} height={size}>\n            <path\n                fill=\"none\"\n                fillRule=\"nonzero\"\n                stroke=\"currentcolor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M1 21.3703704L4.66666667 7.51851852 8.33333333 21.3703704 12 4.25925926 15.6666667 19.7407407 19.3333333 1 23 23\"\n            />\n        </svg>\n    );\n}\n\nexport function AngleLow({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\" fill=\"currentColor\" width={size} height={size}>\n            <path d=\"M316.3 79l15-28.3L274.7 20.7 259.7 49 56.5 433 31.7 480H84.8 480h32V416H480 137.9L316.3 79zM302.7 173l-22.8 43c22.5 17.9 42.3 38.9 58.8 62.5l40.8-25.3c-21.1-30.7-47.1-57.8-76.8-80.2zm82.3 211h49c-7-37-19.8-71.9-37.6-103.7l-40.8 25.3c13.3 24.2 23.3 50.5 29.4 78.3z\" />\n        </svg>\n    );\n}\n\nexport function AngleHigh({ size = 24 }) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" fill=\"currentColor\" width={size} height={size}>\n            <path d=\"M64 64c0-17.7-14.3-32-32-32S0 46.3 0 64V448c0 17.7 14.3 32 32 32H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H64V64zM96 97.6v48.3c31 3.6 60.4 12.5 87.4 25.7l25.3-41.1C174.2 113 136.2 101.6 96 97.6zm115.2 89.7c32.6 21 60.5 48.9 81.5 81.5l40.9-25.2c-25-39-58.2-72.2-97.2-97.2l-25.2 40.9zM334.1 384h48.3c-4-40.2-15.4-78.2-32.9-112.6l-41 25.3c13.2 26.9 22 56.3 25.7 87.4z\" />\n        </svg>\n    );\n}\n", "import React from \"react\";\nimport clsx from \"clsx\";\nimport { Icon, RangeInput, style } from \"../../Components\";\n\nexport default function ControlBar({ state, onCommit, labels }) {\n    const frequencyIcons = {\n        wave: {\n            min: <Icon.WaveLow />,\n            max: <Icon.WaveHigh />,\n        },\n        peak: {\n            min: <Icon.PeakLow />,\n            max: <Icon.PeakHigh />,\n        },\n    };\n\n    return (\n        <div className={style.secondaryControls}>\n            <RangeInput\n                state={state}\n                onCommit={onCommit}\n                property=\"width\"\n                label={labels.width}\n                min={200}\n                max={1400}\n                minIcon={\n                    <div className={clsx(style.flex)}>\n                        <Icon.ArrowRight size=\"12\" />\n                        <Icon.ArrowLeft size=\"12\" />\n                    </div>\n                }\n                maxIcon={\n                    <div className={clsx(style.flex)}>\n                        <Icon.ArrowLeft size=\"12\" />\n                        <Icon.ArrowRight size=\"12\" />\n                    </div>\n                }\n            />\n            <RangeInput\n                state={state}\n                onCommit={onCommit}\n                property=\"height\"\n                label={labels.height}\n                min={20}\n                max={500}\n                minIcon={\n                    <div className={clsx(style.flex, style.flexColumn)}>\n                        <Icon.ArrowDown size=\"12\" />\n                        <Icon.ArrowUp size=\"12\" />\n                    </div>\n                }\n                maxIcon={\n                    <div className={clsx(style.flex, style.flexColumn)}>\n                        <Icon.ArrowUp size=\"12\" />\n                        <Icon.ArrowDown size=\"12\" />\n                    </div>\n                }\n            />\n            <RangeInput\n                state={state}\n                onCommit={onCommit}\n                property=\"offset\"\n                label={labels.offset}\n                min={1}\n                max={250}\n                minIcon={<Icon.ArrowDown />}\n                maxIcon={<Icon.ArrowUp />}\n            />\n            <RangeInput\n                state={state}\n                onCommit={onCommit}\n                property=\"amplitude\"\n                label={labels.amplitude}\n                min={1}\n                max={200}\n                minIcon={<Icon.Mountain />}\n                maxIcon={<Icon.Mountain size=\"48\" />}\n            />\n            <RangeInput\n                state={state}\n                onCommit={onCommit}\n                property=\"frequency\"\n                label={labels.frequency}\n                min={0.1}\n                max={10}\n                step={0.1}\n                minIcon={frequencyIcons[state.points < 7 ? \"peak\" : \"wave\"].min}\n                maxIcon={frequencyIcons[state.points < 7 ? \"peak\" : \"wave\"].max}\n            />\n            <RangeInput\n                state={state}\n                onCommit={onCommit}\n                property=\"points\"\n                label={labels.points}\n                min={1}\n                max={10}\n                step={1}\n                minIcon={<Icon.Peak />}\n                maxIcon={<Icon.Wave />}\n            />\n            <RangeInput\n                state={state}\n                onCommit={onCommit}\n                property=\"phase\"\n                label={labels.phase}\n                min={-180}\n                max={180}\n                step={5}\n                minIcon={<Icon.AngleLow />}\n                maxIcon={<Icon.AngleHigh />}\n            />\n            <RangeInput\n                state={state}\n                onCommit={onCommit}\n                property=\"asyncPhase\"\n                enableProperty=\"asyncPhaseEnable\"\n                label={labels.asyncPhase}\n                min={-180}\n                max={180}\n                step={5}\n                minIcon={<Icon.AngleLow />}\n                maxIcon={<Icon.AngleHigh />}\n            />\n        </div>\n    );\n}\n", "import React, { useState, useEffect } from \"react\";\nimport { ClipPathOutput, calculate, ControlBar } from \"./Components\";\nimport { style } from \"../Components\";\n\nexport default function SecondaryClipPath({ onChange, value, topColor, bottomColor, i18nRegistry }) {\n    const [state, setState] = useState({\n        width: 1200,\n        height: 140,\n        offset: 70,\n        amplitude: 60,\n        frequency: 1.5,\n        points: 7,\n        phase: 0,\n        asyncPhaseEnable: false,\n        asyncPhase: 0,\n        top: null,\n        bottom: null,\n    });\n\n    function handleCommit({\n        width,\n        height,\n        offset,\n        amplitude,\n        frequency,\n        points,\n        phase,\n        asyncPhaseEnable,\n        asyncPhase,\n    }) {\n        if (width == undefined) {\n            width = state.width;\n        }\n        if (height == undefined) {\n            height = state.height;\n        }\n        if (offset == undefined) {\n            offset = state.offset;\n        }\n        if (amplitude == undefined) {\n            amplitude = state.amplitude;\n        }\n        if (frequency == undefined) {\n            frequency = state.frequency;\n        }\n        if (points == undefined) {\n            points = state.points;\n        }\n        if (phase == undefined) {\n            phase = state.phase;\n        }\n\n        if (asyncPhaseEnable == undefined) {\n            asyncPhaseEnable = !!state.asyncPhaseEnable;\n        }\n        if (asyncPhase == undefined) {\n            asyncPhase = state.asyncPhase;\n        }\n\n        const result = calculate({\n            width,\n            height,\n            offset,\n            amplitude,\n            frequency,\n            points,\n            phase,\n            asyncPhaseEnable,\n            asyncPhase,\n        });\n\n        setState(result);\n        onChange(result);\n    }\n\n    useEffect(() => {\n        const result = calculate({ ...state, ...value });\n        setState(result);\n        if (!value.top || !value.bottom) {\n            onChange(result);\n        }\n    }, []);\n\n    const labelArray = [\n        \"content\",\n        \"width\",\n        \"height\",\n        \"offset\",\n        \"amplitude\",\n        \"frequency\",\n        \"points\",\n        \"phase\",\n        \"asyncPhaseEnable\",\n        \"asyncPhase\",\n    ];\n\n    const labels = {};\n    labelArray.forEach((key) => {\n        labels[key] = i18nRegistry.translate(`Litefyr.Style:NodeTypes.Mixin.Visuals.ClipPath:editor.${key}`);\n    });\n\n    return (\n        <div className={style.secondaryGrid}>\n            <ControlBar state={state} onCommit={handleCommit} labels={labels} />\n            <ClipPathOutput state={state} label={labels.content} topColor={topColor} bottomColor={bottomColor} />\n        </div>\n    );\n}\n", "import React from \"react\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\nimport { IconButton, Icon, Button } from \"@neos-project/react-ui-components\";\nimport { style } from \"../Components\";\nimport clsx from \"clsx\";\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n    config: globalRegistry.get(\"frontendConfiguration\").get(\"LitefyrStyleEditorsFont\"),\n    secondaryEditorsRegistry: globalRegistry.get(\"inspector\").get(\"secondaryEditors\"),\n}));\n\nconst defaultOptions = {\n    type: \"main\",\n    allowEmpty: false,\n    disabled: false,\n    roundedButton: 0,\n    colorContrastThreshold: 65,\n    colors: [],\n    mainFont: {},\n};\n\nfunction Editor(props) {\n    const options = { ...defaultOptions, ...props.config, ...props.options };\n    const { value, commit, highlight, i18nRegistry, renderSecondaryInspector, secondaryEditorsRegistry } = props;\n    const { allowEmpty, disabled } = options;\n\n    function onChange(value) {\n        if (value) {\n            commit(value);\n            return;\n        }\n        commit({});\n    }\n\n    function onReset() {\n        // This closes the secondary inspector\n        renderSecondaryInspector(\"LITEFYR_FONT_EDIT\", () => null);\n        commit({});\n    }\n\n    function handleOpenEditor() {\n        const { component: FontEditorWrap } = secondaryEditorsRegistry.get(\"Litefyr.Style/FontEditorWrap\");\n        renderSecondaryInspector(\"LITEFYR_FONT_EDIT\", () => (\n            <FontEditorWrap onChange={onChange} value={value} options={options} i18nRegistry={i18nRegistry} />\n        ));\n    }\n\n    return (\n        <div className={clsx(style.primaryButtons, disabled && style.primaryDisabled)}>\n            <Button\n                onClick={handleOpenEditor}\n                style=\"lighter\"\n                className={clsx(style.wFull, style.textLeft, style.rounded, highlight && style.highlight)}\n            >\n                <Icon icon=\"pencil\" size=\"1x\" padded=\"right\" />\n                {value.font}\n            </Button>\n            {allowEmpty && <IconButton style=\"lighter\" icon=\"times\" title=\"Reset\" onClick={onReset} />}\n        </div>\n    );\n}\n\nexport default neosifier(Editor);\n", "import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { style } from \"../Components\";\nimport { ControlBar, generateAllFontFaces, PreviewText, readFont } from \"./Components\";\n\nexport default function SecondaryFont({ onChange, value, options, i18nRegistry }) {\n    const [state, setState] = useState({\n        font: null,\n        features: {},\n        userSettings: {},\n        style: {},\n        rangePreview: false,\n    });\n\n    function handleCommit(value) {\n        if (!value) {\n            const newState = {\n                font: null,\n                features: {},\n                userSettings: {},\n                style: {\n                    normal: {},\n                    bold: {},\n                },\n                rangePreview: state.rangePreview,\n            };\n            setState(newState);\n            onChange();\n            return;\n        }\n\n        let { font, features, userSettings, style } = value;\n        if (font == undefined) {\n            font = state.font;\n        }\n        if (features == undefined) {\n            features = state.features;\n        }\n        if (userSettings == undefined) {\n            userSettings = state.userSettings;\n        }\n        if (style == undefined) {\n            style = state.style;\n        }\n        const rangePreview = state.rangePreview;\n\n        setState({ font, features, userSettings, style, rangePreview });\n        onChange({ font, userSettings, style });\n    }\n\n    function setRangePreview(enable) {\n        setState({ ...state, rangePreview: !!enable });\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            if (value?.font) {\n                const features = await readFont(value.font, options);\n                setState({ ...state, ...value, features });\n            }\n        }\n        fetchData();\n    }, []);\n\n    const previewClassName = \"litefyr-font-preview\";\n    const roundedButton = (() => {\n        const rounded = options?.roundedButton || 0;\n        return rounded >= 26 ? \"9999px\" : rounded / 16 + \"rem\";\n    })();\n    const buttonCSS = `.${previewClassName} button{border-radius:${roundedButton} !important}`;\n    const fontFaces = generateAllFontFaces(options);\n    const enableBold = options.type !== \"button\";\n    const preview = state.rangePreview ? \"range\" : options.type;\n    const mainFontCSS = options?.mainFont?.style ? mainFontStyle(options.mainFont.style, previewClassName) : \"\";\n    const previewText = i18nRegistry.translate(`Litefyr.Style:NodeTypes.Mixin.Fonts:editor.preview.${preview}`);\n\n    return (\n        <div className={style.secondaryGrid}>\n            <style>\n                {mainFontCSS}\n                {fontFaces}\n                {buttonCSS}\n            </style>\n            <ControlBar\n                state={state}\n                onCommit={handleCommit}\n                config={options}\n                setRangePreview={setRangePreview}\n                enableBold={enableBold}\n                allowEmpty={options.allowEmpty}\n                i18nRegistry={i18nRegistry}\n            />\n            <div className={clsx(previewClassName, style[preview + \"Output\"], style.fontOutput)}>\n                <PreviewText\n                    text={previewText}\n                    style={state.style}\n                    type={options.type}\n                    colors={options?.colors}\n                    colorContrastThreshold={options?.colorContrastThreshold}\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction mainFontStyle({ normal, bold }, className) {\n    if (!normal) {\n        return \"\";\n    }\n\n    const normalStyles = [\n        `font-family:${normal.fontFamily}`,\n        `font-weight:${normal.fontWeight}`,\n        `font-feature-settings:${normal.fontFeatureSettings}`,\n        `font-variation-settings:${normal.fontVariationSettings}`,\n    ].join(\";\");\n    const boldStyles = `font-weight:${bold.fontWeight}`;\n\n    return `.${className}{${normalStyles}}.${className} strong{${boldStyles}}`;\n}\n", "import React from \"react\";\nimport clsx from \"clsx\";\nimport { style } from \"../../Components\";\nimport RangeInput from \"./RangeInput\";\nimport { SelectBox, CheckBox } from \"@neos-project/react-ui-components\";\nimport readFont from \"./ReadFont\";\n\nexport default function ControlBar({\n    i18nRegistry,\n    state,\n    onCommit,\n    config,\n    setRangePreview,\n    allowEmpty = true,\n    enableBold = true,\n}) {\n    const { fonts } = config;\n\n    const fontTypeOptions = [];\n    for (const font in fonts) {\n        fontTypeOptions.push({\n            value: font,\n            label: font,\n            group: fonts[font].group,\n        });\n    }\n\n    // Stuff for fontVariationSettings\n    const fontVariationSettings = state?.features?.fontVariationSettings || {};\n    function onFontVariationSettingChange(key, value) {\n        let userSettings = getCopyOfUserSettings();\n        userSettings.fontVariationSettings[key] = value;\n        const style = generateStyleForPreview(userSettings);\n        onCommit({ userSettings, style });\n    }\n\n    // Stuff for fontFeatureSettings\n    const fontFeatureSettings = state?.features?.fontFeatureSettings || [];\n    function onFontFeatureSettingChange(key, enable) {\n        let userSettings = getCopyOfUserSettings();\n        let fontFeatureSettings = userSettings.fontFeatureSettings;\n        if (enable) {\n            fontFeatureSettings.push(key);\n        } else {\n            fontFeatureSettings = fontFeatureSettings.filter((item) => item !== key);\n        }\n        // Make the array unique\n        userSettings.fontFeatureSettings = [...new Set(fontFeatureSettings)];\n        const style = generateStyleForPreview(userSettings);\n        onCommit({ userSettings, style });\n    }\n\n    // Stuff for font weight\n    const isVariableFont = state?.features?.variable;\n    const variableFontWeight = isVariableFont ? state?.features?.fontWeight?.range : null;\n\n    const fixedFontWeight = !isVariableFont ? state?.features?.fontWeight?.options : [];\n    const fixedFontWeightControlValues = fixedFontWeight && fixedFontWeight.length > 1 ? fixedFontWeight : null;\n\n    function onFontWeightChange(key, value) {\n        let userSettings = JSON.parse(JSON.stringify(state.userSettings));\n        userSettings.fontWeight[key] = value;\n        const style = generateStyleForPreview(userSettings);\n        onCommit({ userSettings, style });\n    }\n\n    // Function to get a copy of the userSettings\n    const getCopyOfUserSettings = () => JSON.parse(JSON.stringify(state.userSettings));\n\n    const labelArray = [\"characterListing\", \"typeface\", \"normalFontWeight\", \"boldFontWeight\"];\n\n    const labels = {};\n    labelArray.forEach((key) => {\n        labels[key] = i18nRegistry.translate(`Litefyr.Style:NodeTypes.Mixin.Fonts:editor.${key}`);\n    });\n\n    return (\n        <div className={style.secondaryControls} style={{ maxWidth: \"300px\" }}>\n            <label className={clsx(style.checboxLabel)}>\n                <CheckBox onChange={setRangePreview} isChecked={!!state?.rangePreview} />\n                <span>{labels.characterListing}</span>\n            </label>\n            <div className={clsx(style.flex, style.flexColumn, style.gap2)}>\n                <div>{labels.typeface}</div>\n                <SelectBox\n                    allowEmpty={allowEmpty}\n                    displaySearchBox={false}\n                    options={fontTypeOptions}\n                    value={state.font}\n                    onValueChange={async (font) => {\n                        if (!font) {\n                            onCommit();\n                            return;\n                        }\n                        const features = await readFont(font, config);\n                        const fontWeight = features.fontWeight;\n                        const variable = features.variable;\n                        const normalFontWeight = variable ? fontWeight.range.default : fontWeight.options[0];\n                        const boldFontWeight = variable\n                            ? getDefaultValueForBold(normalFontWeight, fontWeight.range.max)\n                            : fontWeight.options[fontWeight.options.length - 1];\n                        const userSettings = {\n                            font,\n                            variable,\n                            fontVariationSettings: valuesForFontVariants(features.fontVariationSettings),\n                            fontFeatureSettings: [],\n                            fontWeight: {\n                                normal: normalFontWeight,\n                                bold: boldFontWeight,\n                            },\n                        };\n                        const style = generateStyleForPreview(userSettings);\n                        onCommit({ font, features, userSettings, style });\n                    }}\n                />\n            </div>\n\n            {variableFontWeight && (\n                <React.Fragment>\n                    <RangeInput\n                        min={variableFontWeight.min}\n                        max={variableFontWeight.max}\n                        value={state.userSettings.fontWeight.normal}\n                        label={labels.normalFontWeight}\n                        step={5}\n                        onChange={(value) => onFontWeightChange(\"normal\", value)}\n                        onReset={() => onFontWeightChange(\"normal\", variableFontWeight.default)}\n                    />\n                    {enableBold && (\n                        <RangeInput\n                            min={variableFontWeight.min}\n                            max={variableFontWeight.max}\n                            value={state.userSettings.fontWeight.bold}\n                            label={labels.boldFontWeight}\n                            step={5}\n                            onChange={(value) => onFontWeightChange(\"bold\", value)}\n                            onReset={() =>\n                                onFontWeightChange(\n                                    \"bold\",\n                                    getDefaultValueForBold(variableFontWeight.default, variableFontWeight.max),\n                                )\n                            }\n                        />\n                    )}\n                </React.Fragment>\n            )}\n\n            {fixedFontWeightControlValues && (\n                <React.Fragment>\n                    <div className={clsx(style.flex, style.flexColumn, style.gap2)}>\n                        <div>{labels.normalFontWeight}</div>\n                        {fixedFontWeightControlValues.map((weight) => (\n                            <label className={style.radio}>\n                                <input\n                                    type=\"radio\"\n                                    name=\"weightNormal\"\n                                    value={weight}\n                                    checked={state.userSettings.fontWeight.normal == weight}\n                                    onChange={() => onFontWeightChange(\"normal\", weight)}\n                                />\n                                <span></span>\n                                {weight}\n                            </label>\n                        ))}\n                    </div>\n                    {enableBold && (\n                        <div className={clsx(style.flex, style.flexColumn, style.gap2)}>\n                            <div>{labels.boldFontWeight}</div>\n                            {fixedFontWeightControlValues.map((weight) => (\n                                <label className={style.radio}>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"weightBold\"\n                                        value={weight}\n                                        checked={state.userSettings.fontWeight.bold == weight}\n                                        onChange={() => onFontWeightChange(\"bold\", weight)}\n                                    />\n                                    <span></span>\n                                    {weight}\n                                </label>\n                            ))}\n                        </div>\n                    )}\n                </React.Fragment>\n            )}\n\n            {Object.entries(fontVariationSettings).map(([key, item]) => (\n                <RangeInput\n                    min={item.min}\n                    max={item.max}\n                    value={state.userSettings.fontVariationSettings[key]}\n                    label={key}\n                    step={1}\n                    onChange={(value) => onFontVariationSettingChange(key, value)}\n                    onReset={() => onFontVariationSettingChange(key, item.default)}\n                />\n            ))}\n\n            <div className={style.checkboxGrid}>\n                {fontFeatureSettings.map((feature) => (\n                    <label className={clsx(style.checboxLabel)}>\n                        <CheckBox\n                            onChange={(value) => onFontFeatureSettingChange(feature, value)}\n                            isChecked={state.userSettings.fontFeatureSettings.includes(feature)}\n                        />\n                        <span>{feature}</span>\n                    </label>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nfunction valuesForFontVariants(value) {\n    let result = {};\n    for (const key in value) {\n        const item = value[key];\n        result[key] = item.value || item.default;\n    }\n    return result;\n}\n\nfunction getDefaultValueForBold(normal, max) {\n    return Math.min(normal + 300, max);\n}\n\nfunction generateStyleForPreview({ font, fontVariationSettings, fontFeatureSettings, fontWeight }) {\n    const styles = {\n        fontFamily: font,\n        fontWeight: fontWeight.normal,\n        fontFeatureSettings:\n            fontFeatureSettings && fontFeatureSettings.length\n                ? fontFeatureSettings.map((item) => `\"${item}\"`).join(\",\")\n                : \"normal\",\n    };\n\n    const customFontVariationSettings = [];\n    Object.entries(fontVariationSettings).forEach(([subKey, subValue]) => {\n        customFontVariationSettings.push(`\"${subKey}\" ${subValue}`);\n    });\n    styles.fontVariationSettings = customFontVariationSettings.length\n        ? customFontVariationSettings.join(\",\")\n        : \"normal\";\n\n    return {\n        normal: styles,\n        bold: { fontWeight: fontWeight.bold },\n    };\n}\n", "import React from \"react\";\nimport clsx from \"clsx\";\nimport style from \"../../Components/Style.module.css\";\nimport { IconButton } from \"@neos-project/react-ui-components\";\nimport { nanoid } from \"nanoid\";\n\nexport default function RangeInput({ value, label, min = 0, max = 100, step = 1, onChange, onReset }) {\n    const id = nanoid();\n\n    return (\n        <div className={style.range}>\n            <label htmlFor={id} className={style.flex}>\n                {label}: {value}\n            </label>\n            <div className={clsx(style.flex, style.itemsCenter, style.gap2)}>\n                <input\n                    type=\"range\"\n                    id={id}\n                    min={min}\n                    max={max}\n                    value={value}\n                    step={step}\n                    onChange={({ target }) => onChange(target.valueAsNumber)}\n                />\n                {onReset && <IconButton style=\"lighter\" icon=\"times\" title=\"Reset\" onClick={onReset} />}\n            </div>\n        </div>\n    );\n}\n", "let FontLib;\n\nasync function readFont(font, pluginConfig = {}) {\n    const { folder, fonts } = pluginConfig;\n    const config = fonts[font];\n    if (!FontLib) {\n        await import(\"/_Resources/Static/Packages/Litefyr.Style/Editors/Inflate.js\");\n        await import(\"/_Resources/Static/Packages/Litefyr.Style/Editors/Unbrotli.js\");\n        const { Font } = await import(\"/_Resources/Static/Packages/Litefyr.Style/Editors/FontLib.js\");\n        FontLib = Font;\n    }\n\n    let fontWeightOptions = null;\n    if (config.fontWeight && typeof config.fontWeight !== \"string\") {\n        // The font is not variable, we must know this because of the filename\n        fontWeightOptions = Array.isArray(config.fontWeight) ? config.fontWeight : [config.fontWeight];\n    }\n\n    let filepathToFont = config?.filepath;\n    if (!filepathToFont) {\n        const filename = fontWeightOptions ? `${font}-${fontWeightOptions[0]}` : font;\n        filepathToFont = `${folder}/${filename}.woff2`;\n    }\n\n    return new Promise((resolve, reject) => {\n        const fontObject = new FontLib(font);\n\n        fontObject.onerror = (event) => reject(event);\n        fontObject.onload = async (event) => {\n            let features = await fontCheck(event);\n            features.fontWeight.options = fontWeightOptions;\n            resolve(features);\n        };\n\n        fontObject.src = filepathToFont;\n    });\n}\n\n// When the font's up and loaded in, let's do some testing!\nfunction fontCheck(event) {\n    // We can either rely on scoped access to font, but because the onload function\n    // is not guaranteed to live in the same scope, the font is in the event, too.\n    const font = event.detail.font;\n    const variable = !!font.opentype.tables.fvar;\n\n    // Then, let's check some OpenType things (fontFeatureSettings)\n    let fontFeatureSettings = [];\n    const GSUB = font.opentype.tables.GSUB;\n    if (GSUB) {\n        // Let's figure out which writing scripts this font supports:\n        const supportedScripts = GSUB.getSupportedScripts();\n        supportedScripts.forEach((script) => {\n            const scriptTable = GSUB.getScriptTable(script);\n            const supportedLangSys = GSUB.getSupportedLangSys(scriptTable);\n\n            supportedLangSys.forEach((langsys) => {\n                const langSysTable = GSUB.getLangSysTable(script, langsys);\n                fontFeatureSettings = [\n                    ...fontFeatureSettings,\n                    ...GSUB.getFeatures(langSysTable).map((f) => f.featureTag),\n                ];\n            });\n        });\n\n        fontFeatureSettings = [...new Set(fontFeatureSettings)];\n    }\n\n    // And some OpenType things (fontVariationSettings)\n    // wght is a special case, as it is the font-weight\n    const fontVariationSettings = {};\n    const fontWeight = {\n        // options is for fixed font-weights, who are not variable\n        options: null,\n        // range is for variable font-weights\n        range: null,\n    };\n    if (variable) {\n        // Which axes does it support?\n        const supportedAxes = font.opentype.tables.fvar.getSupportedAxes();\n        let axes = font.opentype.tables.fvar.axes;\n        axes = axes.filter((axis) => supportedAxes.includes(axis.tag));\n        axes.forEach((axis) => {\n            if (axis.tag === \"wght\") {\n                // We have a special case for font-weight and we dont save it in fontVariationSettings\n                fontWeight.range = {\n                    min: axis.minValue,\n                    max: axis.maxValue,\n                    default: axis.defaultValue,\n                };\n                return;\n            }\n            fontVariationSettings[axis.tag] = {\n                tag: axis.tag,\n                min: axis.minValue,\n                max: axis.maxValue,\n                default: axis.defaultValue,\n            };\n        });\n    }\n\n    return {\n        fontFeatureSettings,\n        fontVariationSettings,\n        variable,\n        fontWeight,\n    };\n}\n\nexport default readFont;\n", "export default function generateAllFontFaces(config = {}, renderClass = true) {\n    const { fonts, fallback, folder } = config;\n\n    const generateFontFace = ({ font, filepath, weight, fixedWeight = false }) => {\n        if (!filepath) {\n            const filename = fixedWeight && weight ? `${font}-${weight}` : font;\n            filepath = `${folder}/${filename}.woff2`;\n        }\n        const format = filepath.split(\".\").pop();\n        const fontWeight = weight ? `font-weight:${weight};` : \"\";\n        return `@font-face{font-family:${font};${fontWeight}font-style:normal;font-display:swap;src:url(\"${filepath}\") format(\"${format}\")}`;\n    };\n\n    let selector = \"\";\n    const fontFace = Object.keys(fonts)\n        .map((font) => {\n            const { filepath, fontWeight, group } = fonts[font];\n\n            let css = \"\";\n\n            if (Array.isArray(fontWeight)) {\n                // Fonth as multiple, fixed weights\n                fontWeight.forEach((weight) => {\n                    css += generateFontFace({ font, filepath, weight, fixedWeight: true });\n                });\n            } else if (typeof fontWeight === \"number\") {\n                // Font has one, fixed weight\n                css += generateFontFace({ font, filepath, weight: fontWeight, fixedWeight: true });\n            } else {\n                css += generateFontFace({ font, filepath, weight: fontWeight, fixedWeight: false });\n            }\n\n            if (renderClass) {\n                const family = `'${font}', ${fallback[group]}`;\n                selector += `span[title=\"${font}\"],.font-${font}{font-family:${family}}`;\n            }\n\n            return css;\n        })\n        .join(\"\");\n\n    return fontFace + selector;\n}\n", "import React, { Fragment } from \"react\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\nimport button from \"./Button.module.css\";\nimport clsx from \"clsx\";\nimport { style as styleSheet } from \"../../Components\";\n\nconst neosifier = neos((globalRegistry) => ({\n    colorConfig: globalRegistry.get(\"frontendConfiguration\").get(\"CarbonTailwindColors\"),\n}));\n\nexport default neosifier(PreviewText);\n\nfunction PreviewText({ text, style, type, colors, colorContrastThreshold }) {\n    const blockQuoteElements = parseTags(text, \"blockquote\").map(({ tagName, text }) => ({\n        tagName,\n        text: parseTags(text, \"strong\"),\n    }));\n\n    const isButton = type === \"button\";\n\n    colors = colors.filter((color) => !!color);\n\n    function getColorFromBackground(background) {\n        let luminance = parseFloat(background.split(\"(\")[1].split(\" \")[0]);\n        if (luminance < 1) {\n            luminance *= 100;\n        }\n        return luminance > colorContrastThreshold ? \"black\" : \"white\";\n    }\n\n    return (\n        <Fragment>\n            {isButton && (\n                <div className={styleSheet.buttonPreview}>\n                    {colors.map((color, index) => (\n                        <button\n                            key={index}\n                            type=\"button\"\n                            data-theme=\"main\"\n                            style={{\n                                ...style.normal,\n                                cursor: \"auto\",\n                                backgroundColor: color,\n                                color: getColorFromBackground(color),\n                                \"--fluid-bp\": \"1px\",\n                            }}\n                            class={clsx(button.btn, button[\"btn--inline\"])}\n                        >\n                            {text}\n                        </button>\n                    ))}\n                </div>\n            )}\n            {!isButton && (\n                <div style={style.normal}>\n                    {blockQuoteElements.map(({ tagName, text }, key) => {\n                        if (tagName === \"blockquote\") {\n                            return (\n                                <blockquote key={key}>\n                                    {text.map(({ tagName, text }, key) => {\n                                        if (tagName === \"strong\") {\n                                            return (\n                                                <strong key={key} style={style.bold}>\n                                                    {parseLineBreaks(text)}\n                                                </strong>\n                                            );\n                                        }\n                                        return parseLineBreaks(text);\n                                    })}\n                                </blockquote>\n                            );\n                        }\n                        return text.map(({ tagName, text }, key) => {\n                            if (tagName === \"strong\") {\n                                return (\n                                    <strong key={key} style={style.bold}>\n                                        {parseLineBreaks(text)}\n                                    </strong>\n                                );\n                            }\n                            return parseLineBreaks(text);\n                        });\n                    })}\n                </div>\n            )}\n        </Fragment>\n    );\n}\n\nfunction parseLineBreaks(text) {\n    return text.split(/<br\\s*\\/?>/gi).map((line, key) => {\n        return (\n            <Fragment key={key}>\n                {key !== 0 && <br />}\n                {line}\n            </Fragment>\n        );\n    });\n}\n\nfunction parseTags(text, tagName = \"strong\") {\n    const elements = [];\n    const closingStrong = `</${tagName}>`;\n    text.split(`<${tagName}>`).forEach((line) => {\n        if (line.includes(closingStrong)) {\n            const [strong, normal] = line.split(closingStrong);\n            if (strong) {\n                elements.push({\n                    tagName,\n                    text: strong,\n                });\n            }\n            if (normal) {\n                elements.push({\n                    tagName: null,\n                    text: normal,\n                });\n            }\n            return;\n        }\n        if (line) {\n            elements.push({\n                tagName: null,\n                text: line,\n            });\n        }\n    });\n    return elements;\n}\n", "import manifest from \"@neos-project/neos-ui-extensibility\";\n\nimport { ClipPath, ClipPathWrap } from \"./ClipPath\";\nimport { Font, FontWrap } from \"./Font\";\n\nmanifest(\"Litefyr.Style:Editors\", {}, (globalRegistry) => {\n    const inspectorRegistry = globalRegistry.get(\"inspector\");\n    const editorsRegistry = inspectorRegistry.get(\"editors\");\n    const secondaryEditorsRegistry = inspectorRegistry.get(\"secondaryEditors\");\n\n    editorsRegistry.set(\"Litefyr.Style/ClipPathEditor\", {\n        component: ClipPath,\n    });\n\n    secondaryEditorsRegistry.set(\"Litefyr.Style/ClipPathEditorWrap\", {\n        component: ClipPathWrap,\n    });\n\n    editorsRegistry.set(\"Litefyr.Style/FontEditor\", {\n        component: Font,\n    });\n\n    secondaryEditorsRegistry.set(\"Litefyr.Style/FontEditorWrap\", {\n        component: FontWrap,\n    });\n});\n"],
  "mappings": "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",
  "names": ["readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_decorators", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "init_readFromConsumerApi", "dist_default", "readFromConsumerApi", "import_react", "import_neos_ui_decorators", "import_react_ui_components", "r", "e", "t", "f", "o", "clsx", "clsx_default", "import_react", "import_react", "import_react_ui_components", "urlAlphabet", "nanoid", "size", "id", "bytes", "urlAlphabet", "RangeInput", "state", "onCommit", "property", "enableProperty", "label", "min", "max", "step", "minIcon", "maxIcon", "showValue", "id", "nanoid", "value", "enabled", "valueLabel", "React", "Style_default", "clsx_default", "target", "Icon_exports", "__export", "AngleHigh", "AngleLow", "ArrowDown", "ArrowLeft", "ArrowRight", "ArrowUp", "Circle", "Mountain", "Peak", "PeakHigh", "PeakLow", "Square", "Wave", "WaveHigh", "WaveLow", "import_react", "size", "React", "calculate", "state", "height", "offset", "amplitude", "frequency", "points", "phase", "asyncPhaseEnable", "asyncPhase", "scaledPoints", "units", "radPhase", "top", "calcPath", "bottom", "path", "i", "value", "X", "Y", "getClipPath", "ClipPathOutput", "label", "topColor", "bottomColor", "width", "aspectRatio", "margin", "React", "clsx_default", "Style_default", "import_react", "ControlBar", "state", "onCommit", "labels", "frequencyIcons", "React", "Icon_exports", "Style_default", "RangeInput", "clsx_default", "neosifier", "globalRegistry", "defaultOptions", "Editor", "props", "allowEmpty", "disabled", "topColor", "bottomColor", "value", "commit", "highlight", "i18nRegistry", "renderSecondaryInspector", "secondaryEditorsRegistry", "onChange", "onReset", "handleOpenEditor", "ClipPathEditorWrap", "React", "clsx_default", "Style_default", "ClipPathOutput", "Primary_default", "import_react", "SecondaryClipPath", "onChange", "value", "topColor", "bottomColor", "i18nRegistry", "state", "setState", "handleCommit", "width", "height", "offset", "amplitude", "frequency", "points", "phase", "asyncPhaseEnable", "asyncPhase", "result", "calculate", "labelArray", "labels", "key", "React", "Style_default", "ControlBar", "ClipPathOutput", "import_react", "import_neos_ui_decorators", "import_react_ui_components", "neosifier", "globalRegistry", "defaultOptions", "Editor", "props", "options", "value", "commit", "highlight", "i18nRegistry", "renderSecondaryInspector", "secondaryEditorsRegistry", "allowEmpty", "disabled", "onChange", "onReset", "handleOpenEditor", "FontEditorWrap", "React", "clsx_default", "Style_default", "Primary_default", "import_react", "import_react", "import_react", "import_react_ui_components", "RangeInput", "value", "label", "min", "max", "step", "onChange", "onReset", "id", "nanoid", "React", "Style_default", "clsx_default", "target", "import_react_ui_components", "FontLib", "readFont", "font", "pluginConfig", "folder", "fonts", "config", "Font", "fontWeightOptions", "filepathToFont", "filename", "resolve", "reject", "fontObject", "event", "features", "fontCheck", "variable", "fontFeatureSettings", "GSUB", "script", "scriptTable", "langsys", "langSysTable", "f", "fontVariationSettings", "fontWeight", "supportedAxes", "axes", "axis", "ReadFont_default", "ControlBar", "i18nRegistry", "state", "onCommit", "config", "setRangePreview", "allowEmpty", "enableBold", "fonts", "fontTypeOptions", "font", "fontVariationSettings", "onFontVariationSettingChange", "key", "value", "userSettings", "getCopyOfUserSettings", "style", "generateStyleForPreview", "fontFeatureSettings", "onFontFeatureSettingChange", "enable", "item", "isVariableFont", "variableFontWeight", "fixedFontWeight", "fixedFontWeightControlValues", "onFontWeightChange", "labelArray", "labels", "React", "Style_default", "clsx_default", "features", "ReadFont_default", "fontWeight", "variable", "normalFontWeight", "boldFontWeight", "getDefaultValueForBold", "valuesForFontVariants", "RangeInput", "weight", "feature", "result", "normal", "max", "styles", "customFontVariationSettings", "subKey", "subValue", "generateAllFontFaces", "config", "renderClass", "fonts", "fallback", "folder", "generateFontFace", "font", "filepath", "weight", "fixedWeight", "filename", "format", "fontWeight", "selector", "group", "css", "family", "import_react", "import_neos_ui_decorators", "neosifier", "globalRegistry", "PreviewText_default", "PreviewText", "text", "style", "type", "colors", "colorContrastThreshold", "blockQuoteElements", "parseTags", "tagName", "isButton", "color", "getColorFromBackground", "background", "luminance", "React", "Style_default", "index", "clsx_default", "Button_default", "key", "parseLineBreaks", "line", "elements", "closingStrong", "strong", "normal", "SecondaryFont", "onChange", "value", "options", "i18nRegistry", "state", "setState", "handleCommit", "newState", "font", "features", "userSettings", "style", "rangePreview", "setRangePreview", "enable", "fetchData", "ReadFont_default", "previewClassName", "roundedButton", "rounded", "buttonCSS", "fontFaces", "generateAllFontFaces", "enableBold", "preview", "mainFontCSS", "mainFontStyle", "previewText", "React", "Style_default", "ControlBar", "clsx_default", "PreviewText_default", "normal", "bold", "className", "normalStyles", "boldStyles", "dist_default", "globalRegistry", "inspectorRegistry", "editorsRegistry", "secondaryEditorsRegistry", "Primary_default", "SecondaryClipPath", "SecondaryFont"]
}
